import os
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise RuntimeError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞")

rules = {
    "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ": "–°–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ ‚Äî –¥–≤–∞ –∏ –±–æ–ª–µ–µ —Å–ª–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ —Å–º—ã—Å–ª—É. "
                                     "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚Äî –≤—ã—Ä–∞–∂–∞–µ—Ç –∑–∞–∫–æ–Ω—á–µ–Ω–Ω—É—é –º—ã—Å–ª—å, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∑–Ω–∞–∫–æ–º (. ? !)",
    "–í–∏–¥—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ —Ü–µ–ª–∏ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è": "–ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ (.) –í–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ (?) –ü–æ–±—É–¥–∏—Ç–µ–ª—å–Ω—ã–µ (. –∏–ª–∏ !)",
    "–ì–ª–∞–≤–Ω—ã–µ –∏ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–µ —á–ª–µ–Ω—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è": "–ì–ª–∞–≤–Ω—ã–µ: –ø–æ–¥–ª–µ–∂–∞—â–µ–µ –∏ —Å–∫–∞–∑—É–µ–º–æ–µ. "
                                                  "–í—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–µ: –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–æ.",
    "–ò–º—è —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ": "–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫—Ç–æ? —á—Ç–æ?.",
    "–ò–º—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ": "–û–±–æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∏–∑–Ω–∞–∫ –ø—Ä–µ–¥–º–µ—Ç–∞.",
    "–ì–ª–∞–≥–æ–ª": "–û–±–æ–∑–Ω–∞—á–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ.",
    "–ú–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ": "–£–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç—ã, –ø—Ä–∏–∑–Ω–∞–∫–∏. –ù–µ –Ω–∞–∑—ã–≤–∞–µ—Ç –∏—Ö.",
    "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ": "–ó–∞–∫—Ä–µ–ø–∏: –æ—Ä—Ñ–æ–≥—Ä–∞–º–º—ã, —á–∞—Å—Ç–∏ —Ä–µ—á–∏, —Ä–∞–∑–±–æ—Ä—ã."
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É –¥–ª—è 3 –∫–ª–∞—Å—Å–∞ üìö\n"
        "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /rules."
    )

async def list_rules(update: Update, context: ContextTypes.DEFAULT_TYPE):
    topics = "\n".join(rules.keys())
    await update.message.reply_text("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã:\n" + topics)

async def get_rule(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip().lower()
    for key, value in rules.items():
        if text in key.lower():
            await update.message.reply_text(value)
            return
    await update.message.reply_text("–ü—Ä–∞–≤–∏–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π /rules.")

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("rules", list_rules))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, get_rule))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
