import os
import logging
import threading
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from flask import Flask

# Настройка логирования
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    logger.error("Переменная окружения BOT_TOKEN не задана")
    raise RuntimeError("Переменная окружения BOT_TOKEN не задана")

rules = {
    "Предложение и словосочетание": "Словосочетание — два и более слов, связанных по смыслу. Предложение — выражает законченную мысль...",
    "Виды предложений по цели высказывания. Знаки препинания в конце предложений": "Повествовательные (.) Вопросительные (?) Побудительные (. или !)",
    "Виды предложений по интонации. Знаки препинания в конце предложений": "Восклицательные (!) Невосклицательные (.)",
    "Главные и второстепенные члены предложения": "Главные: подлежащее и сказуемое. Второстепенные: определение, дополнение, обстоятельство.",
    "Обращение. Предложения с обращением": "Обращение — слово или словосочетание, называющее того, к кому обращаются. Выделяется запятыми.",
    "Предложение простое и сложное. Союзы а, и, но в сложном предложении": "Простое — одна грамматическая основа. Сложное — две и более основ. Союзы а, и, но соединяют части сложного предложения.",
    "Словосочетание. Главное и зависимое слово": "Главное слово — от него задается вопрос. Зависимое слово — отвечает на вопрос.",
    "Памятка «Как разобрать предложение по членам»": "1. Найти грамматическую основу 2. Найти второстепенные члены 3. Указать, какими частями речи выражены",
    "Всё о слове. Звуки и буквы": "Звуки мы произносим и слышим, буквы — видим и пишем.",
    "Омонимы. Фразеологизмы. Устаревшие и новые слова": "Омонимы — одинаковые по звучанию, но разные по значению. Фразеологизмы — устойчивые выражения.",
    "Обобщение знаний о буквах и звуках. Звуко-буквенный разбор слова": "Разбор: 1. Записать слово 2. Поставить ударение 3. Разделить на слоги 4. Охарактеризовать звуки",
    "Орфоэпия: особенности произношения русских слов": "Правильное произношение слов согласно нормам русского языка.",
    "Правописание и особенности звуко-буквенного состава слов с Ъ и Ь. Алфавитный порядок": "Ь — смягчает, Ъ — разделяет. Алфавитный порядок — расположение слов по буквам алфавита.",
    "Части речи. Обобщение и уточнение представлений": "Имя существительное, прилагательное, глагол, местоимение, предлог, союз, частица.",
    "Части слова": "Приставка, корень, суффикс, окончание, основа.",
    "Корень слова. Однокоренные слова. Чередование согласных звуков в корнях": "Корень — главная часть слова. Однокоренные слова — имеют общий корень.",
    "Непроизносимые согласные в корне слова": "Проверяются подбором однокоренного слова, где согласный слышен clearly: солнце — солнечный.",
    "Сложные слова. Соединительные гласные в сложных словах": "Сложные слова образуются из двух основ. Соединительные гласные: о, е (пароход, землетрясение).",
    "Окончание. Формы слова. Различие однокоренных форм слова": "Окончание изменяется для связи слов в предложении. Формы слова — изменения одного слова.",
    "Нулевое окончание. Слова без окончаний. Алгоритм выделения окончания": "Нулевое окончание — не выражено звуками. Чтобы найти окончание, нужно изменить слово.",
    "Приставка. Образование слов с помощью приставки": "Приставка стоит перед корнем. Образует новые слова: делать → переделать.",
    "Суффикс как значимая часть слова. Алгоритм выделения в слове суффикса": "Суффикс стоит после корня. Для нахождения нужно подобрать однокоренные слова.",
    "Основа слова. Разбор слова по составу. Анализ модели состава слова": "Основа — часть слова без окончания. Разбор: окончание → основа → приставка → корень → суффикс.",
    "Правописание слов с двумя безударными гласными в корне слова": "Проверяются ударением: два безударных гласных требуют двойной проверки.",
    "Правописание безударных гласных, парных по глухости/звонкости согласных звуков. О/Ё после шипящих": "Безударные гласные проверяются ударением. После шипящих под ударением пишется ё, кроме исключений.",
    "Правила написания слов с непроизносимым согласным звуком в корне": "Проверяются подбором слова, где согласный слышен: радостный — радость.",
    "Правила написания слов с удвоенными согласными": "Запоминаются или проверяются по словарю: класс, аллея, группа.",
    "Правописание слов с суффиксами": "Суффиксы -ек, -ик: если гласный выпадает при изменении — пишется ек (замочек — замочка).",
    "Суффиксы -ек, -ик в словах, их правописание. Правописание суффикса -ок после шипящих": "После шипящих под ударением пишется о: дружок, пирожок.",
    "Правописание приставок": "Приставки пишутся едино: до-, по-, под-, над-, в-, с-, от-, за- и др.",
    "Правописание букв ы, и после ц. Правописание имён существительных на -ий, -ия, -ие": "После ц пишется и в корне: цирк. Исключения: цыган, цыпленок. Существительные на -ие: знание, умение.",
    "Pravopisanie slov s razdelnymi tverdym i myagkim znakami": "Razdelitelnyj ь pishetsya posle soglasnyh pered e, ё, yu, ya: v'yuga. Razdelitelnyj ъ pishetsya posle pristavok na soglasnyj pered e, ё, yu, ya: pod'ezd.",
    "Части речи": "Основные группы слов: имя существительное, прилагательное, глагол, местоимение, числительное, наречие, предлог, союз, частица, междометие.",
    "Часть речи — имя существительное": "Обозначает предмет и отвечает на вопросы кто? что?",
    "Начальная форма существительных. Род существительных": "Начальная форма — именительный падеж единственного числа. Род: мужской, женский, средний.",
    "Мягкий знак (ь) после шипящих на конце имён существительных женского рода": "Существительные ж.р. на шипящий пишутся с ь: ночь, мышь. М.р. без ь: мяч, плащ.",
    "Склонение существительных. Падежные вопросы": "1-е скл.: ж.р. и м.р. на -а,-я. 2-е скл.: м.р. и ср.р. 3-е скл.: ж.р. на ь.",
    "Именительный падеж имён существительных. Роль в предложении": "Отвечает на вопросы кто? что? В предложении通常是 подлежащее.",
    "Родительный падеж имён существительных": "Отвечает на вопросы кого? чего?",
    "Дательный падеж имён существительных": "Отвечает на вопросы кому? чему?",
    "Винительный падеж имён существительных": "Отвечает на вопросы кого? что?",
    "Творительный падеж имён существительных": "Отвечает на вопросы кем? чем?",
    "Предложный падеж имён существительных": "Отвечает на вопросы о ком? о чем? Всегда с предлогом.",
    "Начальная и косвенные формы имён существительных. Разбор имени существительного": "Начальная форма — им.п. ед.ч. Разбор: 1. Нач.форма 2. Пост.признаки 3. Непост.признаки 4. Синтаксическая роль.",
    "Часть речи — имя прилагательное": "Обозначает признак предмета, отвечает на вопросы какой? какая? какое? какие?",
    "Распознавание имён прилагательных среди других частей речи": "Отвечают на вопросы какой? чей? Изменяются по родам, числам, падежам.",
    "Правописание прилагательных": "Родовые окончания: -ый, -ий, -ой (м.р.), -ая, -яя (ж.р.), -ое, -ее (ср.р.).",
    "Изменение имён прилагательных по родам (в единственном числе)": "М.р.: -ый, -ий, -ой; ж.р.: -ая, -яя; ср.р.: -ое, -ее.",
    "Изменение имён прилагательных по числам": "Единственное число: какой? какая? какое? Множественное: какие?",
    "Падеж имён прилагательных (общее представление)": "Изменяются по падежам, согласуясь с существительным.",
    "Начальная форма имени прилагательного": "Именительный падеж мужского рода единственного числа.",
    "Часть речи — местоимение": "Указывает на предмет, признак или количество, но не называет их.",
    "Местоимение как часть речи: значение и употребление в речи": "Заменяет имена существительные, прилагательные, числительные.",
    "Личные местоимения 1, 2, 3-го лица": "1-е лицо: я, мы; 2-е лицо: ты, вы; 3-е лицо: он, она, оно, они.",
    "Часть речи — глагол": "Обозначает действие предмета, отвечает на вопросы что делать? что сделать?",
    "Глагол. Инфинитив. Вид глаголов": "Инфинитив — начальная форма (что делать? что сделать?). Вид: совершенный и несовершенный.",
    "Единственное и множественное число глаголов": "Изменяются по числам: делаю (ед.ч.) — делают (мн.ч.).",
    "Времена глаголов. Написание мягкого знака (ь) в окончаниях -ешь, -ишь": "Настоящее, прошедшее, будущее время. Мягкий знак пишется: пишешь, смотришь.",
    "Изменение глаголов по родам": "В прошедшем времени: сделал (м.р.), сделала (ж.р.), сделало (ср.р.).",
    "НЕ с глаголами. Звукосочетание [ца]": "НЕ с глаголами пишется раздельно: не знаю. Звукосочетание [ца] пишется как ца: улица.",
    "Морфологический разбор глагола": "1. Нач.форма 2. Пост.признаки 3. Непост.признаки 4. Синтаксическая роль."
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Привет! Я бот по русскому языку для 3 класса 📚\nНапиши название темы или используй команду /rules.")

async def list_rules(update: Update, context: ContextTypes.DEFAULT_TYPE):
    topics = "\n".join([f"• {topic}" for topic in rules.keys()])
    await update.message.reply_text("Доступные темы:\n" + topics)

async def get_rule(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip().lower()
    for key, value in rules.items():
        if text in key.lower():
            await update.message.reply_text(f"**{key}**\n\n{value}", parse_mode='Markdown')
            return
    await update.message.reply_text("Правило не найдено. Используй /rules, чтобы увидеть список тем.")

def run_bot():
    """Запуск бота"""
    try:
        application = Application.builder().token(TOKEN).build()
        
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("rules", list_rules))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, get_rule))
        
        logger.info("Бот запускается...")
        logger.info(f"Токен: {TOKEN[:10]}...")  # Логируем начало токена
        application.run_polling()
        
    except Exception as e:
        logger.error(f"Ошибка при запуске бота: {e}")
        raise

# Flask веб-сервер для Render
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is running!"

def run_web_server():
    """Запуск веб-сервера"""
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)

if __name__ == "__main__":
    # Запускаем бота в отдельном потоке
    bot_thread = threading.Thread(target=run_bot)
    bot_thread.daemon = True
    bot_thread.start()
    
    # Запускаем веб-сервер в основном потоке
    run_web_server()
