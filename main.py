import os
import logging
import threading
from flask import Flask
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

# ===== –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø =====
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ===== FLASK –°–ï–†–í–ï–† –î–õ–Ø RENDER =====
web_app = Flask(__name__)

@web_app.route('/')
def home():
    return "‚úÖ –ë–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É 3 –∫–ª–∞—Å—Å –∞–∫—Ç–∏–≤–µ–Ω!"

# ===== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ë–û–¢–ê =====
BOT_TOKEN = os.environ.get('BOT_TOKEN')

# ===== –ë–ê–ó–ê –î–ê–ù–ù–´–• –ü–†–ê–í–ò–õ –° –ü–†–ò–ú–ï–†–ê–ú–ò =====
RUSSIAN_RULES = {
    # –°–∏–Ω—Ç–∞–∫—Å–∏—Å
    "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ": {
        "title": "üìù –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ",
        "rule": "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –≥—Ä—É–ø–ø–∞ —Å–ª–æ–≤, –≤—ã—Ä–∞–∂–∞—é—â–∞—è –∑–∞–∫–æ–Ω—á–µ–Ω–Ω—É—é –º—ã—Å–ª—å. –°–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ ‚Äî –¥–≤–∞ –∏–ª–∏ –±–æ–ª–µ–µ —Å–ª–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ —Å–º—ã—Å–ª—É.",
        "examples": [
            "‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: ¬´–ú–∞–º–∞ —á–∏—Ç–∞–µ—Ç –∫–Ω–∏–≥—É.¬ª (–µ—Å—Ç—å –∑–∞–∫–æ–Ω—á–µ–Ω–Ω–∞—è –º—ã—Å–ª—å)",
            "‚úÖ –°–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ: ¬´—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É¬ª (–Ω–µ—Ç –∑–∞–∫–æ–Ω—á–µ–Ω–Ω–æ–π –º—ã—Å–ª–∏)",
            "‚ùå –ù–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: ¬´–∫—Ä–∞—Å–∏–≤—ã–π —Ü–≤–µ—Ç–æ–∫¬ª (–Ω–µ—Ç –∑–∞–∫–æ–Ω—á–µ–Ω–Ω–æ–π –º—ã—Å–ª–∏)"
        ]
    },
    
    "–∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è": {
        "title": "üî§ –ó–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –≤ –∫–æ–Ω—Ü–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π",
        "rule": "‚Ä¢ –¢–æ—á–∫–∞ (.) ‚Äî –≤ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö\n‚Ä¢ –í–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ (?) ‚Äî –≤ –≤–æ–ø—Ä–æ—Å–∞—Ö\n‚Ä¢ –í–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ (!) ‚Äî –≤ –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö",
        "examples": [
            "–°–µ–≥–æ–¥–Ω—è —Ö–æ—Ä–æ—à–∞—è –ø–æ–≥–æ–¥–∞. (–ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ)",
            "–¢—ã —Å–¥–µ–ª–∞–ª —É—Ä–æ–∫–∏? (–≤–æ–ø—Ä–æ—Å)",
            "–£—Ä–∞! –ö–∞–Ω–∏–∫—É–ª—ã! (–≤–æ—Å–∫–ª–∏—Ü–∞–Ω–∏–µ)"
        ]
    },

    # –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—è
    "—Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ": {
        "title": "üì¶ –ò–º—è —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ",
        "rule": "–û–±–æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–µ–¥–º–µ—Ç –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫—Ç–æ? —á—Ç–æ?",
        "examples": [
            "–∫—Ç–æ? ‚Äî —É—á–µ–Ω–∏–∫, –º–∞–º–∞, –∫–æ—à–∫–∞",
            "—á—Ç–æ? ‚Äî –∫–Ω–∏–≥–∞, —à–∫–æ–ª–∞, —Å–æ–ª–Ω—Ü–µ"
        ]
    },

    "–ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ": {
        "title": "üé® –ò–º—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ", 
        "rule": "–û–±–æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∏–∑–Ω–∞–∫ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫–∞–∫–æ–π? –∫–∞–∫–∞—è? –∫–∞–∫–æ–µ? –∫–∞–∫–∏–µ?",
        "examples": [
            "–∫–∞–∫–æ–π? ‚Äî –∫—Ä–∞—Å–∏–≤—ã–π, —É–º–Ω—ã–π, –±—ã—Å—Ç—Ä—ã–π",
            "–∫–∞–∫–∞—è? ‚Äî –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è, –¥–æ–±—Ä–∞—è, —Å–≤–µ—Ç–ª–∞—è",
            "–∫–∞–∫–æ–µ? ‚Äî –±–æ–ª—å—à–æ–µ, —Å–∏–Ω–µ–µ, –≤–∫—É—Å–Ω–æ–µ"
        ]
    },

    "–≥–ª–∞–≥–æ–ª": {
        "title": "‚ö° –ì–ª–∞–≥–æ–ª",
        "rule": "–û–±–æ–∑–Ω–∞—á–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —á—Ç–æ –¥–µ–ª–∞—Ç—å? —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å?",
        "examples": [
            "—á—Ç–æ –¥–µ–ª–∞—Ç—å? ‚Äî —á–∏—Ç–∞—Ç—å, –ø–∏—Å–∞—Ç—å, –∏–≥—Ä–∞—Ç—å",
            "—á—Ç–æ —Å–¥–µ–ª–∞—Ç—å? ‚Äî –ø—Ä–æ—á–∏—Ç–∞—Ç—å, –Ω–∞–ø–∏—Å–∞—Ç—å, –ø–æ–∏–≥—Ä–∞—Ç—å"
        ]
    },

    # –û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è
    "–∂–∏ —à–∏": {
        "title": "‚úçÔ∏è –ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –ñ–ò-–®–ò",
        "rule": "–ü–æ—Å–ª–µ –ñ –∏ –® –≤—Å–µ–≥–¥–∞ –ø–∏—à–µ—Ç—Å—è –ò (never –´)!",
        "examples": [
            "‚úÖ –∂–∏—Ä–∞—Ñ, —à–∏—à–∫–∞, –º–∞—à–∏–Ω–∞",
            "‚ùå –∂—ã—Ä–∞—Ñ, —à—ã—à–∫–∞, –º–∞—à—ã–Ω–∞ (—Ç–∞–∫ –Ω–µ–ª—å–∑—è!)"
        ]
    },

    "—á–∞ —â–∞": {
        "title": "‚úçÔ∏è –ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –ß–ê-–©–ê",
        "rule": "–ü–æ—Å–ª–µ –ß –∏ –© –≤—Å–µ–≥–¥–∞ –ø–∏—à–µ—Ç—Å—è –ê (never –Ø)!",
        "examples": [
            "‚úÖ —á–∞—à–∫–∞, —â–∞–≤–µ–ª—å, –∑–∞–¥–∞—á–∞",
            "‚ùå —á—è—à–∫–∞, —â—è–≤–µ–ª—å, –∑–∞–¥–∞—á–∞ (—Ç–∞–∫ –Ω–µ–ª—å–∑—è!)"
        ]
    },

    "—á—É —â—É": {
        "title": "‚úçÔ∏è –ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –ß–£-–©–£", 
        "rule": "–ü–æ—Å–ª–µ –ß –∏ –© –≤—Å–µ–≥–¥–∞ –ø–∏—à–µ—Ç—Å—è –£ (never –Æ)!",
        "examples": [
            "‚úÖ —á—É–¥–µ—Å–Ω—ã–π, —â—É–∫–∞, –∏—â—É",
            "‚ùå —á—é–¥–µ—Å–Ω—ã–π, —â—é–∫–∞, –∏—â—é (—Ç–∞–∫ –Ω–µ–ª—å–∑—è!)"
        ]
    },

    # –†–∞–∑–±–æ—Ä—ã
    "–∑–≤—É–∫–æ –±—É–∫–≤–µ–Ω–Ω—ã–π —Ä–∞–∑–±–æ—Ä": {
        "title": "üîä –ó–≤—É–∫–æ-–±—É–∫–≤–µ–Ω–Ω—ã–π —Ä–∞–∑–±–æ—Ä —Å–ª–æ–≤–∞",
        "rule": "1. –ó–∞–ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ\n2. –ü–æ—Å—Ç–∞–≤–∏—Ç—å —É–¥–∞—Ä–µ–Ω–∏–µ\n3. –†–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ —Å–ª–æ–≥–∏\n4. –û—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑–æ–≤–∞—Ç—å –∑–≤—É–∫–∏",
        "examples": [
            "–°–ª–æ–≤–æ: ¬´–ö–û–¢¬ª",
            "–ö [–∫] ‚Äî —Å–æ–≥–ª–∞—Å–Ω—ã–π, —Ç–≤–µ—Ä–¥—ã–π, –≥–ª—É—Ö–æ–π",
            "–û [–æ] ‚Äî –≥–ª–∞—Å–Ω—ã–π, —É–¥–∞—Ä–Ω—ã–π", 
            "–¢ [—Ç] ‚Äî —Å–æ–≥–ª–∞—Å–Ω—ã–π, —Ç–≤–µ—Ä–¥—ã–π, –≥–ª—É—Ö–æ–π",
            "3 –±—É–∫–≤—ã, 3 –∑–≤—É–∫–∞"
        ]
    },

    "—Ä–∞–∑–±–æ—Ä –ø–æ —Å–æ—Å—Ç–∞–≤—É": {
        "title": "üîç –†–∞–∑–±–æ—Ä —Å–ª–æ–≤–∞ –ø–æ —Å–æ—Å—Ç–∞–≤—É",
        "rule": "–ù–∞–π—Ç–∏: –ø—Ä–∏—Å—Ç–∞–≤–∫—É, –∫–æ—Ä–µ–Ω—å, —Å—É—Ñ—Ñ–∏–∫—Å, –æ–∫–æ–Ω—á–∞–Ω–∏–µ",
        "examples": [
            "–ü–û–î–°–ù–ï–ñ–ù–ò–ö",
            "–ø—Ä–∏—Å—Ç–∞–≤–∫–∞: –ü–û–î-",
            "–∫–æ—Ä–µ–Ω—å: -–°–ù–ï–ñ-",
            "—Å—É—Ñ—Ñ–∏–∫—Å: -–ù–ò–ö-",
            "–æ–∫–æ–Ω—á–∞–Ω–∏–µ: –Ω—É–ª–µ–≤–æ–µ"
        ]
    }
}

# ===== –ö–õ–ê–í–ò–ê–¢–£–†–´ =====
def get_main_keyboard():
    keyboard = [
        ['üìö –°–∏–Ω—Ç–∞–∫—Å–∏—Å', 'üì¶ –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—è'],
        ['‚úçÔ∏è –û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è', 'üîç –†–∞–∑–±–æ—Ä—ã'],
        ['‚ùì –ü–æ–º–æ—â—å', 'üéØ –í—Å–µ —Ç–µ–º—ã']
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_syntax_keyboard():
    keyboard = [
        ['üìù –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', 'üî§ –ó–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è'],
        ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_morphology_keyboard():
    keyboard = [
        ['üì¶ –°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ', 'üé® –ü—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ'],
        ['‚ö° –ì–ª–∞–≥–æ–ª', 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_spelling_keyboard():
    keyboard = [
        ['–ñ–ò-–®–ò', '–ß–ê-–©–ê', '–ß–£-–©–£'],
        ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_analysis_keyboard():
    keyboard = [
        ['üîä –ó–≤—É–∫–æ-–±—É–∫–≤–µ–Ω–Ω—ã–π', 'üîç –ü–æ —Å–æ—Å—Ç–∞–≤—É'],
        ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# ===== –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê =====
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    welcome_text = """
    üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É –¥–ª—è 3 –∫–ª–∞—Å—Å–∞! üí°

    üìñ –Ø –º–æ–≥—É:
    ‚Ä¢ –û–±—ä—è—Å–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
    ‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ä—Ñ–æ–≥—Ä–∞–º–º—ã
    ‚Ä¢ –ü–æ–º–æ—á—å —Å —Ä–∞–∑–±–æ—Ä–∞–º–∏ —Å–ª–æ–≤
    ‚Ä¢ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–º–∞–º

    –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ ‚Üì –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã!
    """
    await update.message.reply_text(
        welcome_text,
        reply_markup=get_main_keyboard(),
        parse_mode='HTML'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    help_text = """
    üÜò <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>

    ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    ‚Ä¢ –ò–ª–∏ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã: 
      - ¬´–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ¬ª
      - ¬´–∂–∏ —à–∏¬ª 
      - ¬´—Ä–∞–∑–±–æ—Ä –ø–æ —Å–æ—Å—Ç–∞–≤—É¬ª
      - –∏ –¥—Ä—É–≥–∏–µ

    üìö <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:</b>
    ‚Ä¢ üìö –°–∏–Ω—Ç–∞–∫—Å–∏—Å ‚Äî –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
    ‚Ä¢ üì¶ –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—è ‚Äî —á–∞—Å—Ç–∏ —Ä–µ—á–∏
    ‚Ä¢ ‚úçÔ∏è –û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏—è
    ‚Ä¢ üîç –†–∞–∑–±–æ—Ä—ã ‚Äî –∞–Ω–∞–ª–∏–∑ —Å–ª–æ–≤

    –ù–∞–ø–∏—à–∏ /rules —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ —Ç–µ–º—ã!
    """
    await update.message.reply_text(help_text, parse_mode='HTML')

async def rules_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /rules - –≤—Å–µ —Ç–µ–º—ã"""
    rules_text = "üìö <b>–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã:</b>\n\n"
    
    categories = {
        "üìö –°–∏–Ω—Ç–∞–∫—Å–∏—Å": ["–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", "–∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è"],
        "üì¶ –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—è": ["—Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ", "–ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ", "–≥–ª–∞–≥–æ–ª"],
        "‚úçÔ∏è –û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è": ["–∂–∏ —à–∏", "—á–∞ —â–∞", "—á—É —â—É"],
        "üîç –†–∞–∑–±–æ—Ä—ã": ["–∑–≤—É–∫–æ –±—É–∫–≤–µ–Ω–Ω—ã–π —Ä–∞–∑–±–æ—Ä", "—Ä–∞–∑–±–æ—Ä –ø–æ —Å–æ—Å—Ç–∞–≤—É"]
    }
    
    for category, topics in categories.items():
        rules_text += f"<b>{category}:</b>\n"
        for topic in topics:
            rules_text += f"‚Ä¢ {RUSSIAN_RULES[topic]['title']}\n"
        rules_text += "\n"
    
    rules_text += "\nüìù <i>–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é!</i>"
    await update.message.reply_text(rules_text, parse_mode='HTML')

# ===== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–û–ë–©–ï–ù–ò–ô =====
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_text = update.message.text.lower()
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    if user_text == 'üìö —Å–∏–Ω—Ç–∞–∫—Å–∏—Å':
        await update.message.reply_text(
            "üìö <b>–í—ã–±–µ—Ä–∏ —Ç–µ–º—É –ø–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É:</b>",
            reply_markup=get_syntax_keyboard(),
            parse_mode='HTML'
        )
        return
        
    elif user_text == 'üì¶ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—è':
        await update.message.reply_text(
            "üì¶ <b>–í—ã–±–µ—Ä–∏ —á–∞—Å—Ç—å —Ä–µ—á–∏:</b>",
            reply_markup=get_morphology_keyboard(),
            parse_mode='HTML'
        )
        return
        
    elif user_text == '‚úçÔ∏è –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è':
        await update.message.reply_text(
            "‚úçÔ∏è <b>–í—ã–±–µ—Ä–∏ –æ—Ä—Ñ–æ–≥—Ä–∞–º–º—É:</b>",
            reply_markup=get_spelling_keyboard(),
            parse_mode='HTML'
        )
        return
        
    elif user_text == 'üîç —Ä–∞–∑–±–æ—Ä—ã':
        await update.message.reply_text(
            "üîç <b>–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–∞–∑–±–æ—Ä–∞:</b>",
            reply_markup=get_analysis_keyboard(),
            parse_mode='HTML'
        )
        return
        
    elif user_text == 'üéØ –≤—Å–µ —Ç–µ–º—ã':
        await rules_command(update, context)
        return
        
    elif user_text == '‚ùì –ø–æ–º–æ—â—å':
        await help_command(update, context)
        return
        
    elif user_text == 'üè† –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        await update.message.reply_text(
            "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:</b>",
            reply_markup=get_main_keyboard(),
            parse_mode='HTML'
        )
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–º –∏–∑ –∫–Ω–æ–ø–æ–∫
    button_to_topic = {
        'üìù –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ': '–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
        'üî§ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è': '–∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è',
        'üì¶ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ': '—Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ',
        'üé® –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ': '–ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ',
        '‚ö° –≥–ª–∞–≥–æ–ª': '–≥–ª–∞–≥–æ–ª',
        '–∂–∏-—à–∏': '–∂–∏ —à–∏',
        '—á–∞-—â–∞': '—á–∞ —â–∞', 
        '—á—É-—â—É': '—á—É —â—É',
        'üîä –∑–≤—É–∫–æ-–±—É–∫–≤–µ–Ω–Ω—ã–π': '–∑–≤—É–∫–æ –±—É–∫–≤–µ–Ω–Ω—ã–π —Ä–∞–∑–±–æ—Ä',
        'üîç –ø–æ —Å–æ—Å—Ç–∞–≤—É': '—Ä–∞–∑–±–æ—Ä –ø–æ —Å–æ—Å—Ç–∞–≤—É'
    }
    
    topic_key = button_to_topic.get(user_text.lower(), user_text)
    
    # –ü–æ–∏—Å–∫ —Ç–µ–º—ã –≤ –±–∞–∑–µ
    for key, rule_data in RUSSIAN_RULES.items():
        if topic_key in key or key in topic_key:
            response = f"üìñ <b>{rule_data['title']}</b>\n\n"
            response += f"<b>–ü—Ä–∞–≤–∏–ª–æ:</b>\n{rule_data['rule']}\n\n"
            response += "<b>–ü—Ä–∏–º–µ—Ä—ã:</b>\n"
            for example in rule_data['examples']:
                response += f"‚Ä¢ {example}\n"
            
            await update.message.reply_text(response, parse_mode='HTML')
            return
    
    # –ï—Å–ª–∏ —Ç–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    await update.message.reply_text(
        "‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π /rules —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã "
        "–∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –º–µ–Ω—é ‚Üì",
        reply_markup=get_main_keyboard()
    )

# ===== –û–°–ù–û–í–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø =====
def setup_application():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–æ—Ç–∞"""
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("rules", rules_command))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    return application

def run_flask_server():
    """–ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞"""
    port = int(os.environ.get('PORT', 5000))
    web_app.run(host='0.0.0.0', port=port, debug=False, use_reloader=False)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    if not BOT_TOKEN:
        logger.error("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞
    flask_thread = threading.Thread(target=run_flask_server, daemon=True)
    flask_thread.start()
    logger.info("üåê Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    try:
        application = setup_application()
        logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        application.run_polling(drop_pending_updates=True)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    main()
